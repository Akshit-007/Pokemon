{"version":3,"sources":["pokemon/Papp.js","index.js"],"names":["Papp","useState","id","setid","type","settype","ability","setability","data","setdata","search","setsearch","name","setname","height","setheight","weight","setweight","loading","setloading","useEffect","fetch","then","response","json","pdata","console","log","className","placeholder","onChange","e","target","value","onClick","newname","newsearch","toLowerCase","results","map","item","url","types","abilities","display","src","width","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAkGeA,MA/Ff,WAAiB,IAAD,EAGMC,mBAAS,GAHf,mBAGPC,EAHO,KAGHC,EAHG,OAIYF,mBAAS,IAJrB,mBAILG,EAJK,KAICC,EAJD,OAKkBJ,mBAAS,IAL3B,mBAKLK,EALK,KAKIC,EALJ,OAMYN,mBAAS,MANrB,mBAMLO,EANK,KAMCC,EAND,OAOgBR,mBAAS,MAPzB,mBAOLS,EAPK,KAOGC,EAPH,OAQYV,mBAAS,MARrB,mBAQLW,EARK,KAQCC,EARD,OASgBZ,mBAAS,MATzB,mBASLa,EATK,KASGC,EATH,OAUgBd,mBAAS,MAVzB,mBAULe,EAVK,KAUGC,EAVH,OAWkBhB,oBAAS,GAX3B,mBAWLiB,EAXK,KAWIC,EAXJ,KA4DZ,OA9CAC,qBAAU,WAENC,MAAM,iDACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIhB,EAAQgB,MAE3BC,QAAQC,IAAInB,KAGb,CAACE,IAsCA,gCACI,qBAAKkB,UAAU,UADnB,IACkC,qBAAKA,UAAU,OAAf,qBAC9B,sBAAKA,UAAU,YAAf,UACI,uBAAOxB,KAAK,OAAOyB,YAAY,uBAAuBC,SAAU,SAAAC,GAAOpB,EAAUoB,EAAEC,OAAOC,UAC1F,wBAAQC,QAAS,YAxC7B,WACIf,GAAW,GACX,IAAIgB,EAAQ,KACRC,EAAU1B,EAAO2B,cACrB7B,EAAK8B,QAAQC,KAAI,SAAAC,GACb,GAAIA,EAAK5B,OAASwB,EAAW,CACzBD,EAAQK,EAAK5B,KAEbT,EAAMD,GACNwB,QAAQC,IAAIf,GACZc,QAAQC,IAAIzB,GACZ,IAAIuC,EAAMD,EAAKC,IACfpB,MAAMoB,GACDnB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GACHpB,EAAQoB,EAAMiB,OACd3B,EAAUU,EAAMX,QAChBG,EAAUQ,EAAMT,QAChBT,EAAWkB,EAAMkB,cAKzBjB,QAAQC,IAAIvB,GAEhBS,EAAQsB,GACRhB,GAAW,GACXjB,OAa6B0C,IAAzB,uBAEH1B,EAAQ,4CAAsB,8BAC7BN,EAIE,sBAAKgB,UAAU,OAAf,UACI,oBAAIA,UAAU,OAAd,SAAsBhB,IACtB,qBAAKiC,IAAG,wDAAmD3C,EAAnD,QAA6DY,OAAO,QAAQgC,MAAM,UAC1F,qBAAKlB,UAAU,QAAf,kBACA,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,SAAf,sBAAkCd,EAAlC,SACA,sBAAKc,UAAU,SAAf,sBAAkCZ,EAAlC,SACA,sBAAKY,UAAU,OAAf,oBACW,6BAAKxB,EAAKmC,KAAI,SAAAC,GAAU,OAAQ,6BAAKA,EAAKpC,KAAKQ,eAE1D,sBAAKgB,UAAU,UAAf,uBACc,6BAAKtB,EAAQiC,KAAI,SAAAC,GAAU,OAAQ,6BAAKA,EAAKlC,QAAQM,qBAftE,qBAAKgB,UAAU,QAAf,mCAsBpB1B,EAAK,MCtFN6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.aad584ee.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './style.css'\r\n\r\nfunction Papp() {\r\n\r\n\r\n    var [id, setid] = useState(1);\r\n    const [type, settype] = useState([]);\r\n    const [ability, setability] = useState([]);\r\n    const [data, setdata] = useState(null);\r\n    const [search, setsearch] = useState(null);\r\n    const [name, setname] = useState(null);\r\n    const [height, setheight] = useState(null);\r\n    const [weight, setweight] = useState(null);\r\n    const [loading, setloading] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n       \r\n        fetch(' https://pokeapi.co/api/v2/pokemon?limit=1118')\r\n            .then(response => response.json())\r\n            .then(pdata => setdata(pdata))\r\n\r\n        console.log(data);\r\n\r\n\r\n    }, [search])\r\n\r\n    function display() {\r\n        setloading(true)\r\n        let newname=null;\r\n        let newsearch=search.toLowerCase();\r\n        data.results.map(item => {\r\n            if (item.name === newsearch) {\r\n                newname=item.name;\r\n               \r\n                setid(id);\r\n                console.log(name);\r\n                console.log(id);\r\n                let url = item.url;\r\n                fetch(url)\r\n                    .then(response => response.json())\r\n                    .then((pdata) => {\r\n                        settype(pdata.types)\r\n                        setheight(pdata.height)\r\n                        setweight(pdata.weight)\r\n                        setability(pdata.abilities)\r\n                    })\r\n                //  setheight(type.height)\r\n                //  pdata => settype(pdata.types)\r\n                \r\n                console.log(type)\r\n            }\r\n            setname(newname)\r\n            setloading(false);\r\n            id++;\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"image\"></div> <div className=\"head\">Pokedex</div>\r\n            <div className=\"searchbox\">\r\n                <input type=\"text\" placeholder=\"Pokemon name here...\" onChange={e => { setsearch(e.target.value) }}></input>\r\n                <button onClick={() => { display() }}>Search</button>\r\n            </div>\r\n            {loading?<div>Loading..</div>:(<div>\r\n            {!name ? <div className=\"error\">No  pokemon found..</div> :\r\n\r\n\r\n\r\n                <div className=\"card\">\r\n                    <h1 className=\"name\">{name}</h1>\r\n                    <img src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`} height=\"200px\" width=\"200px\" />\r\n                    <div className=\"title\">Info</div>\r\n                    <div className=\"infobox\">\r\n                        <div className=\"height\">Height - {height} ft</div>\r\n                        <div className=\"weight\">Weight - {weight} kg</div>\r\n                        <div className=\"type\">\r\n                            Type - <ul>{type.map(item => { return (<li>{item.type.name}</li>) })}</ul>\r\n                        </div>\r\n                        <div className=\"ability\">\r\n                            Ability - <ul>{ability.map(item => { return (<li>{item.ability.name}</li>) })}</ul>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            }</div>)}\r\n\r\n{id = 1}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Papp","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport Papp from './pokemon/Papp'\n\nReactDOM.render(\n  <React.StrictMode>\n   <Papp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}